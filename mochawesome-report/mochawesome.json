{
  "stats": {
    "suites": 3,
    "tests": 22,
    "passes": 15,
    "pending": 0,
    "failures": 7,
    "start": "2022-11-26T13:45:51.186Z",
    "end": "2022-11-26T13:45:51.202Z",
    "duration": 16,
    "testsRegistered": 22,
    "passPercent": 68.18181818181817,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a4fe5759-99ac-4be8-be8b-83e5b5cddbfe",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
          "title": "Add",
          "fullFile": "/Users/opa/testCourse/swTestingCourse2022/test/add.test.js",
          "file": "/test/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adds zero to positive number",
              "fullTitle": "Add Adds zero to positive number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(0,3)).to.equal(3)",
              "err": {},
              "uuid": "2a7436a0-1fd7-4cd8-871b-58824e804f45",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive number to zero",
              "fullTitle": "Add Adds positive number to zero",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(3,0)).to.equal(3)",
              "err": {},
              "uuid": "e60d0f97-b22a-423b-a630-b14ee6999b3b",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds zero to negative number",
              "fullTitle": "Add Adds zero to negative number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(0,-3)).to.equal(-3)",
              "err": {},
              "uuid": "e1a3be36-91b4-4762-b4cf-0ff75a20a130",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds negative number to zero",
              "fullTitle": "Add Adds negative number to zero",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-3,0)).to.equal(-3)",
              "err": {},
              "uuid": "6024a9ec-4096-4fbb-a07f-2d679f419fe6",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive number to positive number",
              "fullTitle": "Add Adds positive number to positive number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(3,6)).to.equal(9)",
              "err": {},
              "uuid": "69737fce-177f-450c-93b7-fcffc3e9af60",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds negative number to negative number",
              "fullTitle": "Add Adds negative number to negative number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-3,-6)).to.equal(-9)",
              "err": {},
              "uuid": "0a024ebd-a0ba-4573-84c0-e3eb3ff3a828",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds string to positive number",
              "fullTitle": "Add Adds string to positive number",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(\"abc\",6)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 'abc6' to equal [Function RangeError]",
                "estack": "AssertionError: expected 'abc6' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/add.test.js:27:29)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "fb3a5b75-20df-4c87-976b-99f5d018ea2a",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds null to positive number",
              "fullTitle": "Add Adds null to positive number",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(null,6)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 6 to equal [Function RangeError]",
                "estack": "AssertionError: expected 6 to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/add.test.js:30:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "dadbeb90-79fb-4489-ab48-33e80b75a519",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds boolean to positive number",
              "fullTitle": "Add Adds boolean to positive number",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(true,6)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 7 to equal [Function RangeError]",
                "estack": "AssertionError: expected 7 to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/add.test.js:33:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "f43e9763-7d09-4b41-bf3e-314fea3168e7",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive decimal number to positive decimal number",
              "fullTitle": "Add Adds positive decimal number to positive decimal number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(1.25,2.25)).to.equal(3.5)",
              "err": {},
              "uuid": "4b9dae28-5fe8-4b0b-98eb-bc5c067eb692",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive decimal number to negative decimal number",
              "fullTitle": "Add Adds positive decimal number to negative decimal number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(1.5,-2.25)).to.equal(-0.75)",
              "err": {},
              "uuid": "d698c7c5-3976-4710-a27f-a17f442157da",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds negative decimal number to negative decimal number",
              "fullTitle": "Add Adds negative decimal number to negative decimal number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-1.5,-2)).to.equal(-3.5)",
              "err": {},
              "uuid": "4ee9091a-eb76-49e7-a0b1-3df791865ba9",
              "parentUUID": "87e2464e-ed20-4559-84ef-6479cbe3a24a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a7436a0-1fd7-4cd8-871b-58824e804f45",
            "e60d0f97-b22a-423b-a630-b14ee6999b3b",
            "e1a3be36-91b4-4762-b4cf-0ff75a20a130",
            "6024a9ec-4096-4fbb-a07f-2d679f419fe6",
            "69737fce-177f-450c-93b7-fcffc3e9af60",
            "0a024ebd-a0ba-4573-84c0-e3eb3ff3a828",
            "4b9dae28-5fe8-4b0b-98eb-bc5c067eb692",
            "d698c7c5-3976-4710-a27f-a17f442157da",
            "4ee9091a-eb76-49e7-a0b1-3df791865ba9"
          ],
          "failures": [
            "fb3a5b75-20df-4c87-976b-99f5d018ea2a",
            "dadbeb90-79fb-4489-ab48-33e80b75a519",
            "f43e9763-7d09-4b41-bf3e-314fea3168e7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45b7408a-e658-4627-afd4-7c6fba62c923",
          "title": "Capitalize",
          "fullFile": "/Users/opa/testCourse/swTestingCourse2022/test/capitalize.test.js",
          "file": "/test/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test all lowercase in a string",
              "fullTitle": "Capitalize Test all lowercase in a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"hello\")).to.equal(\"Hello\")",
              "err": {},
              "uuid": "22589d23-1b1b-4fc5-9dd9-7dcfbf16fcd0",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test all uppercase in a string",
              "fullTitle": "Capitalize Test all uppercase in a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"HELLO\")).to.equal(\"Hello\")",
              "err": {},
              "uuid": "2514e19f-a70b-458d-9955-8a3db5d8b304",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test camelCase",
              "fullTitle": "Capitalize Test camelCase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"helloWorld\")).to.equal(\"Helloworld\")",
              "err": {},
              "uuid": "29e34abe-8195-48c5-8c84-8c106e5d47e0",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test empty string",
              "fullTitle": "Capitalize Test empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"\")).to.equal(\"\")",
              "err": {},
              "uuid": "3534a84b-a714-4b61-a853-89c1e37ff0e6",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test one char lowercase",
              "fullTitle": "Capitalize Test one char lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"a\")).to.equal(\"A\")",
              "err": {},
              "uuid": "0e603a34-832f-4992-b839-0467421591d8",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test one char uppercase",
              "fullTitle": "Capitalize Test one char uppercase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"B\")).to.equal(\"B\")",
              "err": {},
              "uuid": "a6fd2cad-c790-4d1a-aa37-0c7863edbc70",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test integer",
              "fullTitle": "Capitalize Test integer",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(1)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected '1' to equal [Function RangeError]",
                "estack": "AssertionError: expected '1' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/capitalize.test.js:27:34)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "0e571637-ab73-4569-996f-7f1a289cc978",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test float",
              "fullTitle": "Capitalize Test float",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(1.1)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected '1.1' to equal [Function RangeError]",
                "estack": "AssertionError: expected '1.1' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/capitalize.test.js:30:36)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "956b3835-5deb-427b-bbc1-77828dbd3a0d",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test boolean",
              "fullTitle": "Capitalize Test boolean",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(true)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 'True' to equal [Function RangeError]",
                "estack": "AssertionError: expected 'True' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/capitalize.test.js:33:37)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "a052d9ed-26ad-463c-ba8b-6f4631883f14",
              "parentUUID": "45b7408a-e658-4627-afd4-7c6fba62c923",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22589d23-1b1b-4fc5-9dd9-7dcfbf16fcd0",
            "2514e19f-a70b-458d-9955-8a3db5d8b304",
            "29e34abe-8195-48c5-8c84-8c106e5d47e0",
            "3534a84b-a714-4b61-a853-89c1e37ff0e6",
            "0e603a34-832f-4992-b839-0467421591d8",
            "a6fd2cad-c790-4d1a-aa37-0c7863edbc70"
          ],
          "failures": [
            "0e571637-ab73-4569-996f-7f1a289cc978",
            "956b3835-5deb-427b-bbc1-77828dbd3a0d",
            "a052d9ed-26ad-463c-ba8b-6f4631883f14"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2ab25cf-0889-404b-9f31-b0c3a46ebaa3",
          "title": "Filter",
          "fullFile": "/Users/opa/testCourse/swTestingCourse2022/test/filter.test.js",
          "file": "/test/filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with empty array",
              "fullTitle": "Filter Test with empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(filter(users,({ active }) => active)).to.equal([ { user: 'barney', active: true } ])",
              "err": {
                "message": "AssertionError: expected [ { user: 'barney', active: true } ] to equal [ { user: 'barney', active: true } ]",
                "estack": "AssertionError: expected [ { user: 'barney', active: true } ] to equal [ { user: 'barney', active: true } ]\n    at Context.<anonymous> (file:///Users/opa/testCourse/swTestingCourse2022/test/filter.test.js:13:54)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": ""
              },
              "uuid": "7c2ffe30-69ce-4e0d-89e3-fcafc16fe2bb",
              "parentUUID": "a2ab25cf-0889-404b-9f31-b0c3a46ebaa3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7c2ffe30-69ce-4e0d-89e3-fcafc16fe2bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}