{
  "stats": {
    "suites": 8,
    "tests": 57,
    "passes": 39,
    "pending": 0,
    "failures": 18,
    "start": "2022-12-01T13:41:33.542Z",
    "end": "2022-12-01T13:41:33.580Z",
    "duration": 38,
    "testsRegistered": 57,
    "passPercent": 68.42105263157895,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e01cfc79-36f4-4dee-a64d-ccbfa91fd804",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
          "title": "Add",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/add.test.js",
          "file": "/test/add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adds zero to positive number",
              "fullTitle": "Add Adds zero to positive number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(0,3)).to.equal(3)",
              "err": {},
              "uuid": "4be7b17e-df85-43c8-877f-59e03a85d0e3",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive number to zero",
              "fullTitle": "Add Adds positive number to zero",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(3,0)).to.equal(3)",
              "err": {},
              "uuid": "e8b59067-2b51-4135-92d0-e70a335e9154",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds zero to negative number",
              "fullTitle": "Add Adds zero to negative number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(0,-3)).to.equal(-3)",
              "err": {},
              "uuid": "601f6b8c-6120-4e0e-993b-b32ee128c81e",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds negative number to zero",
              "fullTitle": "Add Adds negative number to zero",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-3,0)).to.equal(-3)",
              "err": {},
              "uuid": "b0629bb8-ca53-47d4-9e9a-8846499b1492",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive number to positive number",
              "fullTitle": "Add Adds positive number to positive number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(3,6)).to.equal(9)",
              "err": {},
              "uuid": "6c4fb41e-f313-46c4-a802-cc2c2b8acfd5",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds negative number to negative number",
              "fullTitle": "Add Adds negative number to negative number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-3,-6)).to.equal(-9)",
              "err": {},
              "uuid": "9a420526-5089-41ae-b82a-035853beeda2",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds string to positive number",
              "fullTitle": "Add Adds string to positive number",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(\"abc\",6)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 'abc6' to equal [Function RangeError]",
                "estack": "AssertionError: expected 'abc6' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/add.test.js:27:29)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "56530703-3ddc-46de-bdc4-1c0f95dc341f",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds null to positive number",
              "fullTitle": "Add Adds null to positive number",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(null,6)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 6 to equal [Function RangeError]",
                "estack": "AssertionError: expected 6 to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/add.test.js:30:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "b8ff5018-9009-4ebb-8c36-7fc5b5ac2933",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds boolean to positive number",
              "fullTitle": "Add Adds boolean to positive number",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(true,6)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 7 to equal [Function RangeError]",
                "estack": "AssertionError: expected 7 to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/add.test.js:33:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "059794fa-72c5-4cc6-a785-410f1e046f6d",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive decimal number to positive decimal number",
              "fullTitle": "Add Adds positive decimal number to positive decimal number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(1.25,2.25)).to.equal(3.5)",
              "err": {},
              "uuid": "0d9fca43-2889-419d-8e51-a7252aa0669e",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds positive decimal number to negative decimal number",
              "fullTitle": "Add Adds positive decimal number to negative decimal number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(1.5,-2.25)).to.equal(-0.75)",
              "err": {},
              "uuid": "ab504253-b231-4e02-95d2-01214c903fd1",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds negative decimal number to negative decimal number",
              "fullTitle": "Add Adds negative decimal number to negative decimal number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-1.5,-2)).to.equal(-3.5)",
              "err": {},
              "uuid": "f9122d94-3aae-4a09-8543-10f6c8b12756",
              "parentUUID": "1864ae98-67ba-4fe0-8fe2-c90367f41c4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4be7b17e-df85-43c8-877f-59e03a85d0e3",
            "e8b59067-2b51-4135-92d0-e70a335e9154",
            "601f6b8c-6120-4e0e-993b-b32ee128c81e",
            "b0629bb8-ca53-47d4-9e9a-8846499b1492",
            "6c4fb41e-f313-46c4-a802-cc2c2b8acfd5",
            "9a420526-5089-41ae-b82a-035853beeda2",
            "0d9fca43-2889-419d-8e51-a7252aa0669e",
            "ab504253-b231-4e02-95d2-01214c903fd1",
            "f9122d94-3aae-4a09-8543-10f6c8b12756"
          ],
          "failures": [
            "56530703-3ddc-46de-bdc4-1c0f95dc341f",
            "b8ff5018-9009-4ebb-8c36-7fc5b5ac2933",
            "059794fa-72c5-4cc6-a785-410f1e046f6d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
          "title": "Capitalize",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/capitalize.test.js",
          "file": "/test/capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test all lowercase in a string",
              "fullTitle": "Capitalize Test all lowercase in a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"hello\")).to.equal(\"Hello\")",
              "err": {},
              "uuid": "9f3ff30c-112c-41f0-8f9e-d704d9c14a70",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test all uppercase in a string",
              "fullTitle": "Capitalize Test all uppercase in a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"HELLO\")).to.equal(\"Hello\")",
              "err": {},
              "uuid": "b4f9dfd2-a278-41b8-867a-4999392a6bc9",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test camelCase",
              "fullTitle": "Capitalize Test camelCase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"helloWorld\")).to.equal(\"Helloworld\")",
              "err": {},
              "uuid": "3c08662e-ae16-42be-a20a-4d75e3f8b0e1",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test empty string",
              "fullTitle": "Capitalize Test empty string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"\")).to.equal(\"\")",
              "err": {},
              "uuid": "c8fcd0e8-edc0-460e-b63c-8b2899dce743",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test one char lowercase",
              "fullTitle": "Capitalize Test one char lowercase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"a\")).to.equal(\"A\")",
              "err": {},
              "uuid": "a18d5e5a-eaa6-4f8c-82b1-d16e8e313c37",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test one char uppercase",
              "fullTitle": "Capitalize Test one char uppercase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(\"B\")).to.equal(\"B\")",
              "err": {},
              "uuid": "25be6c50-b976-481b-94ea-b649830f1d45",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test integer",
              "fullTitle": "Capitalize Test integer",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(1)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected '1' to equal [Function RangeError]",
                "estack": "AssertionError: expected '1' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/capitalize.test.js:27:34)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "f31bd3e9-c196-4dc9-966a-103886189cc6",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test float",
              "fullTitle": "Capitalize Test float",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(1.1)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected '1.1' to equal [Function RangeError]",
                "estack": "AssertionError: expected '1.1' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/capitalize.test.js:30:36)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "a7448a76-ac78-45fc-b988-ee7cbe952af4",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test boolean",
              "fullTitle": "Capitalize Test boolean",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(capitalize(true)).to.equal(RangeError)",
              "err": {
                "message": "AssertionError: expected 'True' to equal [Function RangeError]",
                "estack": "AssertionError: expected 'True' to equal [Function RangeError]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/capitalize.test.js:33:37)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "a974e4df-a780-4dd5-a451-956560fa30f6",
              "parentUUID": "af0eadf7-85db-4c1f-b0e4-2406d3cbb9bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f3ff30c-112c-41f0-8f9e-d704d9c14a70",
            "b4f9dfd2-a278-41b8-867a-4999392a6bc9",
            "3c08662e-ae16-42be-a20a-4d75e3f8b0e1",
            "c8fcd0e8-edc0-460e-b63c-8b2899dce743",
            "a18d5e5a-eaa6-4f8c-82b1-d16e8e313c37",
            "25be6c50-b976-481b-94ea-b649830f1d45"
          ],
          "failures": [
            "f31bd3e9-c196-4dc9-966a-103886189cc6",
            "a7448a76-ac78-45fc-b988-ee7cbe952af4",
            "a974e4df-a780-4dd5-a451-956560fa30f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
          "title": "Chunk",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js",
          "file": "/test/chunk.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with normal array, positive length",
              "fullTitle": "Chunk Test with normal array, positive length",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray, 2);\n//console.log(testChunk);\nexpect(chunk(normalArray, 2)).to.equal([['a', 'b'], ['c', 'd']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'c', 'd' ], undefined ] to equal [ [ 'a', 'b' ], [ 'c', 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'c', 'd' ], undefined ] to equal [ [ 'a', 'b' ], [ 'c', 'd' ] ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:13:38)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " [\n   [\n+     \"a\"\n+     \"b\"\n+   ]\n+   [\n     \"c\"\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "dc58ddd2-88c1-4a9a-ac09-5f34719ebcad",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, longer length",
              "fullTitle": "Chunk Test with normal array, longer length",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray, 5);\n//console.log(testChunk);\nexpect(chunk(normalArray, 2)).to.equal([['a'],['b'],['c'],['d']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'c', 'd' ], undefined ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'c', 'd' ], undefined ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:18:38)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " [\n   [\n+     \"a\"\n+   ]\n+   [\n+     \"b\"\n+   ]\n+   [\n     \"c\"\n+   ]\n+   [\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "99270900-a924-46bc-914b-62aafefd98e5",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with odd array, positive length",
              "fullTitle": "Chunk Test with odd array, positive length",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(oddArray, 4);\n//console.log(testChunk);\nexpect(chunk(oddArray, 4)).to.equal([['a'],['b'],['c'],['d', 'e']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'e', undefined, …(2) ], undefined ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], …(1) ]",
                "estack": "AssertionError: expected [ [ 'e', undefined, …(2) ], undefined ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], …(1) ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:23:35)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " [\n   [\n+     \"a\"\n+   ]\n+   [\n+     \"b\"\n+   ]\n+   [\n+     \"c\"\n+   ]\n+   [\n+     \"d\"\n     \"e\"\n-     [undefined]\n-     [undefined]\n-     [undefined]\n   ]\n ]\n"
              },
              "uuid": "8426e24a-80f6-4084-9dea-dec803ddfaad",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty array, positive length",
              "fullTitle": "Chunk Test with empty array, positive length",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(emptyArray, 2);\n//console.log(testChunk);\nexpect(chunk(emptyArray, 2)).to.eql([]);",
              "err": {},
              "uuid": "5dc55901-cd93-4a4b-9873-6d80036c7ac2",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, no length",
              "fullTitle": "Chunk Test with normal array, no length",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray);\n//console.log(testChunk);\nexpect(chunk(normalArray)).to.equal([['a'],['b'],['c'],['d']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:33:35)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " [\n   [\n+     \"a\"\n+   ]\n+   [\n+     \"b\"\n+   ]\n+   [\n+     \"c\"\n+   ]\n+   [\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "8af4a572-0f2b-4541-8b94-865db684b2ce",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty array, no length",
              "fullTitle": "Chunk Test with empty array, no length",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray);\n//console.log(testChunk);\nexpect(chunk(normalArray)).to.eql([]);",
              "err": {
                "message": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to deeply equal []",
                "estack": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to deeply equal []\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:38:35)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- [\n-   [\n-     \"d\"\n-   ]\n- ]\n+ []\n"
              },
              "uuid": "754c927d-d9f0-4440-85f7-fd129cb7bf58",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, negative length",
              "fullTitle": "Chunk Test with normal array, negative length",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray);\n//console.log(testChunk);\nexpect(chunk(normalArray)).to.equal([['a','b'],['c','d']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to equal [ [ 'a', 'b' ], [ 'c', 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to equal [ [ 'a', 'b' ], [ 'c', 'd' ] ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:43:35)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " [\n   [\n+     \"a\"\n+     \"b\"\n+   ]\n+   [\n+     \"c\"\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "39f8acaf-1fbd-408a-8da4-4d276b843d45",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty array, negative length",
              "fullTitle": "Chunk Test with empty array, negative length",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray, -2);\n//console.log(testChunk);\nexpect(chunk(normalArray, -2)).to.eql([]);",
              "err": {},
              "uuid": "20c3320d-67da-45b1-ab7c-04a5f8e13639",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, length as string",
              "fullTitle": "Chunk Test with normal array, length as string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray, '1');\n//console.log(testChunk);\nexpect(chunk(normalArray, '1')).to.equal([['a'],['b'],['c'],['d']]);",
              "err": {
                "message": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]",
                "estack": "AssertionError: expected [ [ 'd' ], undefined, undefined, …(1) ] to equal [ [ 'a' ], [ 'b' ], [ 'c' ], [ 'd' ] ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/chunk.test.js:53:40)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " [\n   [\n+     \"a\"\n+   ]\n+   [\n+     \"b\"\n+   ]\n+   [\n+     \"c\"\n+   ]\n+   [\n     \"d\"\n   ]\n ]\n"
              },
              "uuid": "b350c090-a593-4977-a452-6e3c32e90666",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, length as alphaChar",
              "fullTitle": "Chunk Test with normal array, length as alphaChar",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testChunk = chunk(normalArray, 'a');\n//console.log(testChunk);\nexpect(chunk(normalArray, 'a')).to.eql([]);",
              "err": {},
              "uuid": "03a5db23-7b6f-4916-9d21-e791194edd9d",
              "parentUUID": "e18ce338-525d-4e3a-acba-f2bd8db4f098",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5dc55901-cd93-4a4b-9873-6d80036c7ac2",
            "20c3320d-67da-45b1-ab7c-04a5f8e13639",
            "03a5db23-7b6f-4916-9d21-e791194edd9d"
          ],
          "failures": [
            "dc58ddd2-88c1-4a9a-ac09-5f34719ebcad",
            "99270900-a924-46bc-914b-62aafefd98e5",
            "8426e24a-80f6-4084-9dea-dec803ddfaad",
            "8af4a572-0f2b-4541-8b94-865db684b2ce",
            "754c927d-d9f0-4440-85f7-fd129cb7bf58",
            "39f8acaf-1fbd-408a-8da4-4d276b843d45",
            "b350c090-a593-4977-a452-6e3c32e90666"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41b612d7-55af-42a1-af95-e327047e02f4",
          "title": "countBy",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/countBy.test.js",
          "file": "/test/countBy.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with normal collection, working function",
              "fullTitle": "countBy Test with normal collection, working function",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testCountBy = countBy(normalCollection, value => value.active);\n//console.log(testCountBy);\nexpect(countBy(normalCollection, value => value.active)).to.equal({'true': 2, 'false': 1});",
              "err": {
                "message": "AssertionError: expected { true: 1, false: +0 } to equal { true: 2, false: 1 }",
                "estack": "AssertionError: expected { true: 1, false: +0 } to equal { true: 2, false: 1 }\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/countBy.test.js:16:65)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " {\n-   \"false\": 0\n-   \"true\": 1\n+   \"false\": 1\n+   \"true\": 2\n }\n"
              },
              "uuid": "d4dbaaf6-89fb-45d1-946a-6b2f179ee4ca",
              "parentUUID": "41b612d7-55af-42a1-af95-e327047e02f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal collection, incorrect function",
              "fullTitle": "countBy Test with normal collection, incorrect function",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var testCountBy = countBy(normalCollection, wrong => wrong.nothing);\n//console.log(testCountBy);\nexpect(countBy(normalCollection, wrong => wrong.nothing)).to.eql({});",
              "err": {
                "message": "AssertionError: expected { undefined: 2 } to deeply equal {}",
                "estack": "AssertionError: expected { undefined: 2 } to deeply equal {}\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/countBy.test.js:21:66)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- {\n-   \"undefined\": 2\n- }\n+ {}\n"
              },
              "uuid": "599269e0-a011-44a7-89dc-79efecc6bde6",
              "parentUUID": "41b612d7-55af-42a1-af95-e327047e02f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty collection, working function",
              "fullTitle": "countBy Test with empty collection, working function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testCountBy = countBy(emptyCollection, value => value.active);\n//console.log(testCountBy);\nexpect(countBy(emptyCollection, value => value.active)).to.eql({});",
              "err": {},
              "uuid": "556117e4-eefd-478f-b5dc-d798bab65e63",
              "parentUUID": "41b612d7-55af-42a1-af95-e327047e02f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty collection, incorrect function",
              "fullTitle": "countBy Test with empty collection, incorrect function",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testCountBy = countBy(emptyCollection, wrong => wrong.nothing);\n//console.log(testCountBy);\nexpect(countBy(emptyCollection, wrong => wrong.nothing)).to.eql({});",
              "err": {},
              "uuid": "c412455b-4ae3-4de3-9980-04adb997ed9b",
              "parentUUID": "41b612d7-55af-42a1-af95-e327047e02f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "556117e4-eefd-478f-b5dc-d798bab65e63",
            "c412455b-4ae3-4de3-9980-04adb997ed9b"
          ],
          "failures": [
            "d4dbaaf6-89fb-45d1-946a-6b2f179ee4ca",
            "599269e0-a011-44a7-89dc-79efecc6bde6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "046878ba-df4c-4a39-afe6-749ba230f540",
          "title": "difference",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/difference.test.js",
          "file": "/test/difference.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with similar arrays",
              "fullTitle": "difference Test with similar arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDifference = difference(normalArray1, normalArray1);\n//console.log(testDifference);\nexpect(difference(normalArray1, normalArray1)).to.eql([]);",
              "err": {},
              "uuid": "d853acf5-43c9-4c00-a936-92eb0e9150ed",
              "parentUUID": "046878ba-df4c-4a39-afe6-749ba230f540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with two arrays",
              "fullTitle": "difference Test with two arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDifference = difference(normalArray1, normalArray2);\n//console.log(testDifference);\nexpect(difference(normalArray1, normalArray2)).to.eql([1,2]);",
              "err": {},
              "uuid": "aa65334c-6b10-4bee-8b80-2cb3b5fe3562",
              "parentUUID": "046878ba-df4c-4a39-afe6-749ba230f540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty arrays",
              "fullTitle": "difference Test with empty arrays",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDifference = difference(emptyArray, emptyArray);\n//console.log(testDifference);\nexpect(difference(emptyArray, emptyArray)).to.eql([]);",
              "err": {},
              "uuid": "dbea640e-ddf2-4d22-bce1-4112e2fa0e80",
              "parentUUID": "046878ba-df4c-4a39-afe6-749ba230f540",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with non-arrays",
              "fullTitle": "difference Test with non-arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDifference = difference(nonArray, nonArray);\n//console.log(testDifference);\nexpect(difference(nonArray, nonArray)).to.eql([]);",
              "err": {},
              "uuid": "2f5a91c9-cec3-44bc-90a3-3292bdaf1b4c",
              "parentUUID": "046878ba-df4c-4a39-afe6-749ba230f540",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d853acf5-43c9-4c00-a936-92eb0e9150ed",
            "aa65334c-6b10-4bee-8b80-2cb3b5fe3562",
            "dbea640e-ddf2-4d22-bce1-4112e2fa0e80",
            "2f5a91c9-cec3-44bc-90a3-3292bdaf1b4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf3da36d-54c6-406e-bcf4-338b436cb7ae",
          "title": "drop",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/drop.test.js",
          "file": "/test/drop.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with normal array, positive number",
              "fullTitle": "drop Test with normal array, positive number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDrop = drop(normalArray, 2);\n//console.log(testDrop);\nexpect(drop(normalArray, 2)).to.eql([3,4]);",
              "err": {},
              "uuid": "f1fc22ea-3cc8-4f01-a68b-91faf4b33d92",
              "parentUUID": "cf3da36d-54c6-406e-bcf4-338b436cb7ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, bigger number",
              "fullTitle": "drop Test with normal array, bigger number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDrop = drop(normalArray, 2);\n//console.log(testDrop);\nexpect(drop(normalArray, 5)).to.eql([]);",
              "err": {},
              "uuid": "7de07616-1e9e-4602-bada-9945ba09a778",
              "parentUUID": "cf3da36d-54c6-406e-bcf4-338b436cb7ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with normal array, negative number",
              "fullTitle": "drop Test with normal array, negative number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDrop = drop(normalArray, -2);\n//console.log(testDrop);\nexpect(drop(normalArray, 2)).to.eql([3,4]);",
              "err": {},
              "uuid": "60d1a30f-ac03-43e0-b5d6-d334b28ebe4e",
              "parentUUID": "cf3da36d-54c6-406e-bcf4-338b436cb7ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty array, bigger number",
              "fullTitle": "drop Test with empty array, bigger number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDrop = drop(emptyArray, 2);\n//console.log(testDrop);\nexpect(drop(emptyArray, 5)).to.eql([]);",
              "err": {},
              "uuid": "b305c293-ade7-4c72-b4f9-c4d0d9d1dba4",
              "parentUUID": "cf3da36d-54c6-406e-bcf4-338b436cb7ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with non-array, char as number",
              "fullTitle": "drop Test with non-array, char as number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDrop = drop(nonArray, 'r');\nconsole.log(testDrop);\nexpect(drop(nonArray, 'r')).to.eql(['a','r','r','a','y']);",
              "err": {},
              "uuid": "458643b3-25a8-49f0-88d2-5483593f010e",
              "parentUUID": "cf3da36d-54c6-406e-bcf4-338b436cb7ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1fc22ea-3cc8-4f01-a68b-91faf4b33d92",
            "7de07616-1e9e-4602-bada-9945ba09a778",
            "60d1a30f-ac03-43e0-b5d6-d334b28ebe4e",
            "b305c293-ade7-4c72-b4f9-c4d0d9d1dba4",
            "458643b3-25a8-49f0-88d2-5483593f010e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "76c07ec2-8457-4509-85e0-409889cd40c8",
          "title": "Filter",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/filter.test.js",
          "file": "/test/filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with empty",
              "fullTitle": "Filter Test with empty",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(filter()).to.equal()",
              "err": {
                "message": "AssertionError: expected [ [] ] to equal undefined",
                "estack": "AssertionError: expected [ [] ] to equal undefined\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/filter.test.js:13:26)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": null
              },
              "uuid": "83731a69-89e7-41d4-ba8f-87cfc7bec26d",
              "parentUUID": "76c07ec2-8457-4509-85e0-409889cd40c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty array",
              "fullTitle": "Filter Test with empty array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(filter([])).to.equal([[]])",
              "err": {
                "message": "AssertionError: expected [ [] ] to equal [ [] ]",
                "estack": "AssertionError: expected [ [] ] to equal [ [] ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/filter.test.js:16:27)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": ""
              },
              "uuid": "21e421c4-df42-4599-81f8-edd28a7ba685",
              "parentUUID": "76c07ec2-8457-4509-85e0-409889cd40c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with correct function",
              "fullTitle": "Filter Test with correct function",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(filter(users,({active}) => active)).to.equal([ { user: 'barney', active: true } ])",
              "err": {
                "message": "AssertionError: expected [ { user: 'barney', active: true } ] to equal [ { user: 'barney', active: true } ]",
                "estack": "AssertionError: expected [ { user: 'barney', active: true } ] to equal [ { user: 'barney', active: true } ]\n    at Context.<anonymous> (file:///Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/filter.test.js:19:52)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": ""
              },
              "uuid": "01be029c-6dae-4fd4-ac2e-250829905e02",
              "parentUUID": "76c07ec2-8457-4509-85e0-409889cd40c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "83731a69-89e7-41d4-ba8f-87cfc7bec26d",
            "21e421c4-df42-4599-81f8-edd28a7ba685",
            "01be029c-6dae-4fd4-ac2e-250829905e02"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
          "title": "isEmpty",
          "fullFile": "/Users/valeria/Documents/tuni/softwareTesting/swTestingCourse2022/test/isEmpty.test.js",
          "file": "/test/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with null",
              "fullTitle": "isEmpty Test with null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(null)).to.equal(true)",
              "err": {},
              "uuid": "dcb5c268-c080-4d8c-b279-3ac5e1e368d0",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test empty",
              "fullTitle": "isEmpty Test empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty()).to.equal(true)",
              "err": {},
              "uuid": "aa05013f-00c0-41ee-94f7-996165126a79",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with true",
              "fullTitle": "isEmpty Test with true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(true)).to.equal(true)",
              "err": {},
              "uuid": "d71271fa-461b-4675-b467-12202aaa43f8",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with 1",
              "fullTitle": "isEmpty Test with 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty(1)).to.equal(true)",
              "err": {},
              "uuid": "3a52ca93-0b14-421c-9af6-11cf778b7841",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty array",
              "fullTitle": "isEmpty Test with empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty([])).to.equal(true)",
              "err": {},
              "uuid": "e5a7027e-9537-4780-9d86-4d36582525fb",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with empty string",
              "fullTitle": "isEmpty Test with empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty('')).to.equal(true)",
              "err": {},
              "uuid": "e652133c-5503-4373-b8ea-19207efa19fa",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with string",
              "fullTitle": "isEmpty Test with string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty('abc')).to.equal(false)",
              "err": {},
              "uuid": "f3f6bf12-a6f6-421e-9145-78cf8044b346",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with array",
              "fullTitle": "isEmpty Test with array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty([1,2,3])).to.equal(false)",
              "err": {},
              "uuid": "da60e503-d920-4b6f-8b0a-feb5a1bbfeaf",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with object",
              "fullTitle": "isEmpty Test with object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty({ 'a': 1 })).to.equal(false)",
              "err": {},
              "uuid": "ec2c28b8-d977-4424-8ac6-19ff836a128d",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with map",
              "fullTitle": "isEmpty Test with map",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isEmpty('a', 1)).to.equal(false)",
              "err": {},
              "uuid": "af047af4-51e4-4eb9-a1db-058d8136b3a5",
              "parentUUID": "e19c370f-b7c5-457c-984e-86c045ffbbf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcb5c268-c080-4d8c-b279-3ac5e1e368d0",
            "aa05013f-00c0-41ee-94f7-996165126a79",
            "d71271fa-461b-4675-b467-12202aaa43f8",
            "3a52ca93-0b14-421c-9af6-11cf778b7841",
            "e5a7027e-9537-4780-9d86-4d36582525fb",
            "e652133c-5503-4373-b8ea-19207efa19fa",
            "f3f6bf12-a6f6-421e-9145-78cf8044b346",
            "da60e503-d920-4b6f-8b0a-feb5a1bbfeaf",
            "ec2c28b8-d977-4424-8ac6-19ff836a128d",
            "af047af4-51e4-4eb9-a1db-058d8136b3a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}